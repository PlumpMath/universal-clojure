{:node-type :defprotocol, :name IAnswer, :specs ({:name baz, :doc const 42, :meta {:line 41}, :arities {1 [this]}} {:name foo, :doc Test3, :meta {:line 42}, :arities {1 [this]}}), :meta nil}
{:node-type :defprotocol, :name IValue, :specs ({:name ivalue, :doc 0, :meta {:line 44}, :arities {1 [this]}}), :meta nil}
(IAnswer {:foo (fn* foo [this] a), :baz (fn* baz [this] 42)} IValue {:ivalue (fn* ivalue [this] 0)})
{:node-type :deftype, :name Answer, :members [a], :extends {:node-type :extend, :type Answer, :protos ({:proto IAnswer, :fns ({:fn foo, :with {:name foo, :forms [{:required-arity 1, :body {:value a, :node-type :global-lookup}, :last-is-rest false, :args [this]}], :node-type :fn}} {:fn baz, :with {:name baz, :forms [{:required-arity 1, :body {:value 42, :data-type :number, :node-type :const}, :last-is-rest false, :args [this]}], :node-type :fn}})} {:proto IValue, :fns ({:fn ivalue, :with {:name ivalue, :forms [{:required-arity 1, :body {:value 0, :data-type :number, :node-type :const}, :last-is-rest false, :args [this]}], :node-type :fn}})}), :meta nil}}
[ [ {
  "value" : 1,
  "data-type" : "number",
  "node-type" : "const"
}, 1 ], [ {
  "value" : 2,
  "data-type" : "number",
  "node-type" : "const"
}, 2 ], [ {
  "data-type" : "nil",
  "node-type" : "const"
}, null ], [ {
  "value" : "foo",
  "data-type" : "string",
  "node-type" : "const"
}, "foo" ], [ {
  "node-type" : "const",
  "data-type" : "nil"
}, null ], [ {
  "node-type" : "const",
  "data-type" : "number",
  "value" : 1
}, 1 ], [ {
  "body" : [ {
    "value" : 1,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 2,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 3,
    "data-type" : "number",
    "node-type" : "const"
  } ],
  "used-locals" : null,
  "node-type" : "do"
}, 3 ], [ {
  "node-type" : "vector-literal"
}, [ ] ], [ {
  "items" : [ {
    "value" : 1,
    "data-type" : "number",
    "node-type" : "const"
  } ],
  "node-type" : "vector-literal"
}, [ 1 ] ], [ {
  "items" : [ {
    "value" : 1,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 2,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 3,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 4,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 5,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 6,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 7,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 8,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 8,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 11,
    "data-type" : "number",
    "node-type" : "const"
  } ],
  "node-type" : "vector-literal"
}, [ 1, 2, 3, 4, 5, 6, 7, 8, 8, 11 ] ], [ {
  "value" : true,
  "data-type" : "bool",
  "node-type" : "const"
}, true ], [ {
  "value" : false,
  "data-type" : "bool",
  "node-type" : "const"
}, false ], [ {
  "else" : {
    "value" : 0,
    "data-type" : "number",
    "node-type" : "const"
  },
  "then" : {
    "value" : 1,
    "data-type" : "number",
    "node-type" : "const"
  },
  "cond" : {
    "value" : true,
    "data-type" : "bool",
    "node-type" : "const"
  },
  "node-type" : "if"
}, 1 ], [ {
  "else" : {
    "value" : 2,
    "data-type" : "number",
    "node-type" : "const"
  },
  "then" : {
    "value" : 1,
    "data-type" : "number",
    "node-type" : "const"
  },
  "cond" : {
    "value" : false,
    "data-type" : "bool",
    "node-type" : "const"
  },
  "node-type" : "if"
}, 2 ], [ {
  "else" : {
    "data-type" : "nil",
    "node-type" : "const"
  },
  "then" : {
    "value" : 1,
    "data-type" : "number",
    "node-type" : "const"
  },
  "cond" : {
    "value" : true,
    "data-type" : "bool",
    "node-type" : "const"
  },
  "node-type" : "if"
}, 1 ], [ {
  "else" : {
    "data-type" : "nil",
    "node-type" : "const"
  },
  "then" : {
    "value" : 1,
    "data-type" : "number",
    "node-type" : "const"
  },
  "cond" : {
    "value" : false,
    "data-type" : "bool",
    "node-type" : "const"
  },
  "node-type" : "if"
}, null ], [ {
  "used-locals" : null,
  "args" : [ {
    "value" : 1,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 2,
    "data-type" : "number",
    "node-type" : "const"
  } ],
  "fn" : {
    "name" : "fn542",
    "forms" : [ {
      "required-arity" : 2,
      "used-locals" : [ "x" ],
      "body" : {
        "used-locals" : [ "x" ],
        "node-type" : "local",
        "local-type" : "fn-arg",
        "name" : "x",
        "offset" : 0
      },
      "last-is-rest" : false,
      "args" : [ "x", "y" ]
    } ],
    "node-type" : "fn"
  },
  "node-type" : "invoke"
}, 1 ], [ {
  "used-locals" : null,
  "args" : [ {
    "value" : 1,
    "data-type" : "number",
    "node-type" : "const"
  }, {
    "value" : 2,
    "data-type" : "number",
    "node-type" : "const"
  } ],
  "fn" : {
    "name" : "fn547",
    "forms" : [ {
      "required-arity" : 2,
      "used-locals" : [ "y" ],
      "body" : {
        "used-locals" : [ "y" ],
        "node-type" : "local",
        "local-type" : "fn-arg",
        "name" : "y",
        "offset" : 1
      },
      "last-is-rest" : false,
      "args" : [ "x", "y" ]
    } ],
    "node-type" : "fn"
  },
  "node-type" : "invoke"
}, 2 ], [ {
  "else" : {
    "data-type" : "nil",
    "node-type" : "const"
  },
  "then" : {
    "body" : [ {
      "value" : 1,
      "data-type" : "number",
      "node-type" : "const"
    }, {
      "value" : 2,
      "data-type" : "number",
      "node-type" : "const"
    } ],
    "used-locals" : null,
    "node-type" : "do"
  },
  "cond" : {
    "value" : true,
    "data-type" : "bool",
    "node-type" : "const"
  },
  "node-type" : "if"
}, 2 ], [ {
  "else" : {
    "data-type" : "nil",
    "node-type" : "const"
  },
  "then" : {
    "body" : [ {
      "value" : 1,
      "data-type" : "number",
      "node-type" : "const"
    }, {
      "value" : 2,
      "data-type" : "number",
      "node-type" : "const"
    } ],
    "used-locals" : null,
    "node-type" : "do"
  },
  "cond" : {
    "value" : false,
    "data-type" : "bool",
    "node-type" : "const"
  },
  "node-type" : "if"
}, null ], [ {
  "body" : [ {
    "specs" : [ {
      "name" : "baz",
      "doc" : "const 42",
      "meta" : {
        "line" : 41
      },
      "arities" : {
        "1" : [ "this" ]
      }
    }, {
      "name" : "foo",
      "doc" : "Test3",
      "meta" : {
        "line" : 42
      },
      "arities" : {
        "1" : [ "this" ]
      }
    } ],
    "name" : "IAnswer",
    "node-type" : "defprotocol"
  }, {
    "specs" : [ {
      "name" : "ivalue",
      "doc" : "0",
      "meta" : {
        "line" : 44
      },
      "arities" : {
        "1" : [ "this" ]
      }
    } ],
    "name" : "IValue",
    "node-type" : "defprotocol"
  }, {
    "extends" : {
      "node-type" : "extend",
      "type" : "Answer",
      "protos" : [ {
        "proto" : "IAnswer",
        "fns" : [ {
          "fn" : "foo",
          "with" : {
            "name" : "foo",
            "forms" : [ {
              "required-arity" : 1,
              "body" : {
                "value" : "a",
                "node-type" : "global-lookup"
              },
              "last-is-rest" : false,
              "args" : [ "this" ]
            } ],
            "node-type" : "fn"
          }
        }, {
          "fn" : "baz",
          "with" : {
            "name" : "baz",
            "forms" : [ {
              "required-arity" : 1,
              "body" : {
                "value" : 42,
                "data-type" : "number",
                "node-type" : "const"
              },
              "last-is-rest" : false,
              "args" : [ "this" ]
            } ],
            "node-type" : "fn"
          }
        } ]
      }, {
        "proto" : "IValue",
        "fns" : [ {
          "fn" : "ivalue",
          "with" : {
            "name" : "ivalue",
            "forms" : [ {
              "required-arity" : 1,
              "body" : {
                "value" : 0,
                "data-type" : "number",
                "node-type" : "const"
              },
              "last-is-rest" : false,
              "args" : [ "this" ]
            } ],
            "node-type" : "fn"
          }
        } ]
      } ],
      "meta" : null
    },
    "members" : [ "a" ],
    "name" : "Answer",
    "node-type" : "deftype"
  }, {
    "used-locals" : null,
    "args" : [ {
      "used-locals" : null,
      "args" : [ {
        "value" : 11,
        "data-type" : "number",
        "node-type" : "const"
      } ],
      "fn" : {
        "value" : "Answer.",
        "node-type" : "global-lookup"
      },
      "node-type" : "invoke"
    } ],
    "fn" : {
      "value" : "foo",
      "node-type" : "global-lookup"
    },
    "node-type" : "invoke"
  } ],
  "used-locals" : null,
  "node-type" : "do"
}, 11 ] ]
